{"version":3,"file":"static/js/251.1e3627fe.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","redux/filter/filter-selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ListContacts/ContactItem/ContactItem.module.css?e20f","components/ListContacts/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ListContacts/ListContact.module.css?e2fd","components/ListContacts/ListContacts.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"input\":\"Form_input__FTtTw\",\"button\":\"Form_button__8NOIT\",\"label\":\"Form_label__8nx+5\"};","import { useState,useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport {useGetContactsQuery,  useAddContactMutation} from '../../redux/contact/contact-reducer';\nimport { onError, onWarning } from '../../utilits/toast';\nimport s from \"./Form.module.css\";\n\nexport default function Form() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const {  data: contacts } = useGetContactsQuery();\n  const [addContact, { error }] = useAddContactMutation();\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newContact = { name, phone: number };\n    const isAlreadyContacts =contacts.find((el) => el.name.toLowerCase() === name.toLowerCase())\n    .length !== 0;\n\n    if (isAlreadyContacts) {\n      onWarning(`Contact ${name} already exist`)\n    } else {\n      addContact( newContact)\n    }\n    setName(\"\");\n    setNumber(\"\");\n  };\n  useEffect(() => {\n    if (error) onError(`${error.status} ${error.data.msg}`)\n  }, [error]);\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label  className={s.label}>\n        Name\n        <input\n          id={\"id\"}\n          className={s.input}\n          type=\"text\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={(e) => setName(e.target.value)}\n        />\n        {\"\"}\n      </label>\n      <label   className={s.label}>\n        Number\n        <input\n          id={\"number\"}\n          type=\"tel\"\n          className={s.input}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          value={number}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={e => setNumber(e.target.value)}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n   <ContactPhoneIcon fontSize=\"small\"/>  Add contact \n      </button>\n    </form>\n  );\n}\n\nForm.protoType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};","export const getFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"itemText\":\"ContactItem_itemText__mBoSI\",\"button\":\"ContactItem_button__YXZt-\",\"buttonEdit\":\"ContactItem_buttonEdit__Qrd97\",\"item\":\"ContactItem_item__eUn5u\",\"input\":\"ContactItem_input__OnZwL\"};","import { useEffect, useState } from 'react'\nimport PropTypes from \"prop-types\";\nimport DeleteForeverRoundedIcon from '@mui/icons-material/DeleteForeverRounded';\nimport EditOffRoundedIcon from '@mui/icons-material/EditOffRounded';\nimport SaveAltRoundedIcon from '@mui/icons-material/SaveAltRounded';\nimport HighlightOffRoundedIcon from '@mui/icons-material/HighlightOffRounded';\nimport { useDeleteContactMutation, useEditContactMutation} from '../../../redux/contact/contact-reducer';\nimport { onError } from '../../../utilits/toast';\nimport Loader from '../../Loader/Loader';\nimport s from \"./ContactItem.module.css\";\n\nfunction ContactItem({ id, nameContact, numberContact }) {\n  const [isEdit, setIsEdit] = useState(false);\n  const [name, setName] = useState(nameContact);\n  const [number, setNumber] = useState(numberContact);\n  const [deleteContact, { isLoading, error: errorDelete }] = useDeleteContactMutation();\n  const [changeContact, { error: errorEdit }] = useEditContactMutation();\n \n  useEffect(() => {\n    if (errorDelete) onError(`${errorDelete.status} ${errorDelete.data.msg}`)\n  }, [errorDelete]);\n  \n  useEffect(() => {\n    if (errorEdit) {\n      onError(`${errorEdit.status} ${errorEdit.data.msg}`)\n      setName(nameContact)\n      setNumber(numberContact)\n    }\n  }, [errorEdit, nameContact, numberContact]);\n\n  const onChange = (isChange) => {\n    if (!isChange) {\n      setName(nameContact)\n      setNumber(numberContact)\n    } else {\n      changeContact({ id, name, phone: number })\n    }\n    setIsEdit(false)\n  };\n  return (\n   <li className={s.item}  key={id} >\n   {isEdit ? (\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={s.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={name}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={(e) => setName(e.target.value)}\n        />\n      ) : (\n        <span className={s.itemText}>{name}</span>\n      )}\n      {isEdit ? (\n        <input\n          type=\"tel\"\n          name=\"number\"\n          className={s.input}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          value={number}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={(e) => setNumber(e.target.value) }\n        />\n      ) : (\n        <span className={s.itemText}>{number}</span>\n      )}\n      {!isEdit && (\n        <button\n          type=\"button\"\n          className={s.buttonEdit}\n          data-id={id}\n          onClick={() =>setIsEdit(true)}\n          disabled={isLoading}\n        >\n          <EditOffRoundedIcon fontSize=\"small\" />\n        </button>\n      )}\n      {isEdit && (\n        <button\n          type=\"button\"\n          className={s.buttonEdit}\n          data-id={id}\n          onClick={() => onChange(true)}\n          disabled={isLoading}\n        >\n          <SaveAltRoundedIcon fontSize=\"small\" />\n        </button>\n      )}\n      {isEdit && (\n        <button\n          type=\"button\"\n          className={s.button}\n          data-id={id}\n          onClick={() =>onChange(false)}\n          disabled={isLoading}\n        >\n          <HighlightOffRoundedIcon fontSize=\"small\" />\n        </button>\n      )}\n      <button\n        type=\"button\"\n        className={s.button}\n        data-id={id}\n        onClick={() => {\n        deleteContact(id)\n        }}\n        disabled={isLoading}\n      >\n        {isLoading && <Loader size={15} />}\n        <DeleteForeverRoundedIcon fontSize=\"small\" />\n      </button>\n    </li>\n  )\n}\n\nContactItem.propTypes = {\n  id:PropTypes.string,\n  nameContact: PropTypes.string.isRequired,\n  numberContact: PropTypes.string.isRequired,\n}\nexport default ContactItem;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ListContact_list__VHyc4\",\"item\":\"ListContact_item__3ycDd\"};","import{useEffect} from \"react\";\nimport { useSelector} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { useGetContactsQuery} from '../../redux/contact/contact-reducer';\nimport { getFilter } from '../../redux/filter/filter-selectors';\nimport { onError } from '../../utilits/toast';\nimport Loader from '../Loader/Loader';\nimport ContactItem from \"./ContactItem/ContactItem\";\nimport s from \"./ListContact.module.css\";\n\n\nconst ListContacts = () => {\n  const { data, error, isFetching } = useGetContactsQuery()\n  const filter = useSelector(getFilter);\n  \n  useEffect(() => {\n    if (error) onError(`${error.status} ${error.data}`)\n  }, [error]);\n \n  return (\n    <ul>\n       {isFetching && <Loader />}\n     {data &&\n        data\n          .filter((el) => el?.name.toUpperCase().includes(filter.toUpperCase()))\n          .map((el) => (\n            <ContactItem\n          key={el.id}\n           id={el.id}\n          className={s.item}\n          nameContact={el.name}\n          numberContact={el.phone}\n            />\n        ))}\n      </ul>\n  \n  );\n};\nListContacts.propTypes = {\n  listContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n \n};\n\n export default ListContacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/filter/filter-selectors';\nimport { setFilter } from '../../redux/filter/filter-actions';\nimport s from \"./Filter.module.css\";\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onFilter = (value) => dispatch(setFilter(value));\n\n  return (\n    <label className={s.label}>\n      Find contact by name\n      <input\n        id={'name'}\n        type=\"text\"\n        name=\"filter\"\n        className={s.input}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        value={filter}\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n         onInput={e => onFilter(e.target.value)}\n      />\n    </label>\n  );\n}\n\n\nexport default Filter;\n","import { Routes, Route } from 'react-router-dom';\nimport { useGetContactsQuery } from '../redux/contact/contact-reducer';\nimport Section from '../components/Section/Section';\nimport Form from '../components/Form/Form.jsx';\nimport ListContacts from '../components/ListContacts/ListContacts';\nimport Filter from '../components/Filter/Filter';\n\nexport default function ContactsPage() {\n  const { data } = useGetContactsQuery();\n\n  return (\n    <>\n      <Routes>\n        <Route\n          path=\"add\"\n          element={\n            <Section title=\"Phonebook\">\n              <Form />\n            </Section>\n          }\n        />\n      </Routes>\n      <Section title=\"Contacts\">\n        {data && data.length >= 2 && <Filter />}\n        <ListContacts />\n      </Section>\n    </>\n  );\n}"],"names":["Form","useState","name","setName","number","setNumber","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","error","useEffect","onError","status","msg","onSubmit","e","preventDefault","newContact","phone","find","el","toLowerCase","length","onWarning","className","s","id","type","value","pattern","title","required","onChange","target","ContactPhone","fontSize","protoType","PropTypes","getFilter","state","filter","nameContact","numberContact","isEdit","setIsEdit","useDeleteContactMutation","deleteContact","isLoading","errorDelete","useEditContactMutation","changeContact","errorEdit","isChange","onClick","disabled","EditOffRounded","SaveAltRounded","HighlightOffRounded","Loader","size","DeleteForeverRounded","isFetching","useSelector","toUpperCase","includes","map","dispatch","useDispatch","onInput","setFilter","ContactsPage","path","element","Section"],"sourceRoot":""}